#gnomad v.2.1.1 exomes (lifted over)
[[annotation]]
file="gnomad_exome.2.1.1_LIFTOVER.vcf.gz"
fields=["AC","nhomalt","AF_popmax","AN","AC_male"]
names=["gnomad_ac_es","gnomad_hom_es","gnomad_af_es","gnomad_an_es","gnomad_male_ac_es"]
ops=["self","self","self","self","self"]

#gnomad v.3.1.2 genomes (native hg38)
[[annotation]]
file="gnomad_genomes_v.3.1.2.vcf.gz"
fields=["AC", "nhomalt","AF_popmax","AN","AC_XY"]
names=["gnomad_ac_gs", "gnomad_hom_gs","gnomad_af_gs","gnomad_an_gs","gnomad_male_ac_gs"]
ops=["self","self","self","self","self"]

[[postannotation]]
fields=["gnomad_ac_es","gnomad_ac_gs"]
op="sum"
name="gnomad_ac"
type="Integer"

[[postannotation]]
fields=["gnomad_hom_es","gnomad_hom_gs"]
op="sum"
name="gnomad_hom"
type="Integer"

[[postannotation]]
fields=["gnomad_af_es","gnomad_af_gs"]
op="max"
name="gnomad_af_popmax"
type="Float"

[[postannotation]]
fields=["gnomad_an_es","gnomad_an_gs"]
op="sum"
name="gnomad_an"
type="Integer"

[[postannotation]]
fields=["gnomad_ac","gnomad_an"]
op="div2"
name="gnomad_af"
type="Float"

[[postannotation]]
fields=["gnomad_male_ac_es","gnomad_male_ac_gs"]
op="sum"
name="gnomad_male_ac"
type="Integer"

[[annotation]]
file="dbsnp-151.vcf.gz"
fields=["ID"]
names=["rs_ids"]
ops=["concat"]

[[annotation]]
file="clinvar.vcf.gz"
fields=["CLNSIG","CLNREVSTAT"]
names=["clinvar_pathogenic", "clinvar_status"]
ops=["concat", "concat"]
                    
# convert 5 to 'pathogenic', 255 to 'unknown', etc.
[[postannotation]]
fields=["clinvar_pathogenic"]
op="lua:clinvar_sig(clinvar_pathogenic)"
name="clinvar_sig"
type="String"

#CADD 1.7 - SNVs
[[annotation]]
file = "CADD1.7/whole_genome_SNVs.tsv.gz"
names = ["CADD_phred"]
columns = [6]
ops = ["self"]
 
#CADD 1.7 - indels
[[annotation]]
file = "CADD1.7/gnomad.genomes.r4.0.indel.tsv.gz"
names = ["CADD_phred"]
columns = [6]
ops = ["self"]

#dbNSFP v3.4
[[annotation]]
file = "dbNSFPv4.2a_combined_hg38.txt.gz"
names = ["phyloP30way_mammalian","phastCons30way_mammalian","Vest4_score","REVEL_score","Gerp_score"]
columns = [159,165,67,82,155]
ops = ["self","self","self","self","self"]

# spliceAI
[[annotation]]
file = "spliceai_scores.masked.indel.hg38.vcf.gz"
fields = ["SpliceAI"]
names = ["spliceai_score"]
ops = ["self"]

# spliceAI
[[annotation]]
file = "spliceai_scores.masked.snv.hg38.vcf.gz"
fields = ["SpliceAI"]
names = ["spliceai_score"]
ops = ["self"]

# UCE
[[annotation]]
file = "13661_UCEs_over_100bp.hg38_sorted_LIFTOVER.bed.gz"
columns = [3]
names = ["UCE_100bp"]
ops = ["flag"]

[[annotation]]
file="2175_UCEs_over_200bp.hg38_sorted_LIFTOVER.bed.gz"
columns = [3]
names = ["UCE_200bp"]
ops = ["flag"]

[[annotation]]
file="wgEncodeRegDnaseClusteredV3_hg38_sorted_LIFTOVER.bed.gz"
columns=[3]
names=["DNaseI_hypersensitive_site"]
ops=["flag"]

[[annotation]]
file="wgEncodeUwTfbsGm12864CtcfStdRawRep3_sorted_LIFTOVER.bed.gz"
columns=[3]
names=["CTCF_binding_site"]
ops=["flag"]


#Enhancer
[[annotation]]
file="Enhancer.hg38.all.celltypes.formatted_sorted_LIFTOVER.bed.gz"
columns = [6]
names = ["ENH_cellline_tissue"]
ops = ["self"]

#TFBS
[[annotation]]
file="wgEncodeRegTfbsClusteredV3_hg38_sorted_LIFTOVER.bed.gz"
columns = [4]
names = ["tf_binding_sites"]
ops=["concat"]

#ncER score
[[annotation]]
file="GRCh38_ncER_perc.bed.gz"
columns = [4]
names = ["ncER"]
ops=["max"]

#LinSight Score
[[annotation]]
file = "GRCh38_LinSight.bed.gz"
names = ["LinSight_Score"]
columns = [4]
ops = ["max"]

#ReMM scores
[[annotation]]
file = "ReMM.v0.4.hg38.tsv.gz"
names = ["ReMM"]
columns = [3]
ops = ["max"]

#C4R WES counts and samples
[[annotation]]
file="C4R_wes_counts_LIFTED_rmspace_sorted.tsv.gz"
columns = [5,6]
names = ["c4r_wes_samples", "c4r_wes_counts"]
ops=["first", "first"]

#C4R WGS counts and samples
[[annotation]]
file="C4R_genome_counts_sorted_LIFTED.tsv.gz"
columns = [5,6]
names = ["c4r_wgs_samples", "c4r_wgs_counts"]
ops=["first", "first"]

#FATHMM-XF scores
[[annotation]]
file = "GRCh38_FATHMM-XF_NC_edited.tsv.gz"
names = ["FATHMM_XF"]
columns = [5]
ops = ["self"]

#AlphaMissense
[[annotation]]
file="AlphaMissense_hg38.tsv.gz"
columns = [9]
names = ["AlphaMissense"]
ops=["first"]
